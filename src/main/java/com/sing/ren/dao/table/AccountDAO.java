package com.sing.ren.dao.table;import java.util.List;import java.util.Map;import org.springframework.stereotype.Component;import com.sing.ren.dao.BaseDao;@Componentpublic class AccountDAO extends BaseDao {	@Override	public String statementIdForInsert() throws Exception {		return nsForTableStatements("account_insert");	}	@Override	public String statementIdForQuery() throws Exception {		return nsForTableStatements("account_query");	}	@Override	public String statementIdForUpdate() throws Exception {		return nsForTableStatements("account_update");	}	@Override	public String statementIdForUpsert() throws Exception {		return nsForTableStatements("account_upsert");	}	@Override	public String statementIdForDelete() throws Exception {		return nsForTableStatements("account_delete");	}	public void insertDB(Map<String,Object> map) throws Exception {		logger.debug("AccountDAO insertAccount");		updaterAndUpdateTime(map);		insert(map);	}	@SuppressWarnings("unchecked")	public List<Map<String,Object>> queryDB(Map<String,Object> map) throws Exception {		logger.debug("AccountDAO queryAccount");		return (List<Map<String,Object>>) query(map);	}		public List<Map<String,Object>> queryForJoinPerson(Map<String,Object> map) throws Exception {		logger.debug("AccountDAO queryAccount");		return (List<Map<String,Object>>) query(map,"account_join_person_query");	}	public void updateDB(Map<String,Object> map) throws Exception{		logger.debug("AccountDAO updateAccount");		updaterAndUpdateTime(map);		update(map);	}	public void deleteDB(Map<String,Object> map) throws Exception {		logger.debug("AccountDAO deleteAccount");		delete(map);	}	public void upsertDB(Map<String,Object> map) throws Exception {		logger.debug("AccountDAO upsertAccount");		updaterAndUpdateTime(map);		upsert(map);	}}